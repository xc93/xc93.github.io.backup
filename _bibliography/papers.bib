---
---

@InProceedings{CR19, 
  author    = {Chen, Xiaohong and Ro\c{s}u, Grigore},
  booktitle = {Proceedings of LICS},
  title     = {Matching $\mu$-logic},
  pages     = {1--13},
  year      = {2019},
  publisher = {IEEE},
  abstract  = {Matching logic is a logic for specifying and reasoning about
               structure by means of patterns and pattern matching.
               This paper makes two contributions.
               First, it proposes a sound and complete proof system for
               matching logic in its full generality.
               Previously, sound and complete deduction for matching logic
               was known only for particular theories providing equality
               and membership.
               Second, it proposes matching $\mu$-logic, an extension of
               matching logic with a least fixpoint $\mu$-binder.
               It is shown that matching $\mu$-logic captures as special instances many
               important logics in mathematics and computer science, including
               first-order logic with least fixpoints, modal mu-logic
               as well as dynamic logic and various temporal logics such as
               infinite/finite-trace linear temporal logic and computation tree logic,
               and notably reachability logic, the underlying logic of the K framework
               for programming language semantics and formal analysis.
               Matching $\mu$-logic therefore serves as a unifying foundation for
               specifying and reasoning about fixpoints and induction, 
               programming languages and program specification and verification.},
  doi       = {10.1109/LICS.2019.8785675},
  selected  = {true},
  pdf       = {CR19-paper.pdf},
  slides    = {CR19-slides.pdf},
}

@TechReport{CR19a,
  author      = {Chen, Xiaohong and Ro\c{s}u, Grigore},
  title       = {Matching $\mu$-logic (Technical Report)},
  institution = {University of Illinois Urbana-Champaign},
  booktitle   = {Technical Report},
  year        = {2019},
  html        = {https://hdl.handle.net/2142/102281},
  pdf         = {CR19a-paper},
}

@Article{CLR21,
  author            = {Chen, Xiaohong and Lucanu, Dorel and Ro\c{s}u, Grigore},
  journal           = {Journal of Logical and Algebraic Methods in Programming},
  title             = {Matching logic explained},
  year              = {2021},
  pages             = {1--36},
  volume            = {120},
  abstract          = {Matching logic was recently proposed as a unifying logic for specifying and reasoning about static structure and dynamic behavior of programs. In matching logic, patterns and specifications are used to uniformly represent mathematical domains (such as numbers and Boolean values), datatypes, and transition systems, whose properties can be reasoned about using one fixed matching logic proof system. In this paper we give a tutorial of matching logic. We use a suite of examples to explain the basic concepts of matching logic and show how to capture many important mathematical domains, datatypes, and transition systems using patterns and specifications. We put emphasis on the general principles of induction and coinduction in matching logic and show how to do inductive and coinductive reasoning about datatypes and codatatypes. To encourage the future tools development for matching logic, we propose and use throughout the paper a human-readable formal syntax to write specifications in a modular and compact way.},
  publisher         = {Elsevier},
  url               = {https://doi.org/10.1016/j.jlamp.2021.100638},
}

@TechReport{CLR20a,
  author      = {Chen, Xiaohong and Lucanu, Dorel and Ro\c{s}u, Grigore},
  institution = {University of Illinois at Urbana-Champaign},
  title       = {Initial algebra semantics in matching logic},
  year        = {2020},
  month       = jul,
  number      = {http://hdl.handle.net/2142/107781},
}



@InProceedings{CLTR21,
  author            = {Xiaohong Chen and Zhengyao Lin and Minh-Thai Trinh and Grigore Ro\c{s}u},
  booktitle         = {Proceedings of the 33\textsuperscript{rd} International Conference on Computer-Aided Verification},
  title             = {Towards a Trustworthy Semantics-Based Language Framework via Proof Generation},
  year              = {2021},
  month             = jul,
  publisher         = {ACM},
  abstract          = {We pursue the vision of an ideal language framework, where programming 
language designers only need to define the formal syntax and semantics
of their languages, and all language tools are automatically  generated
by the framework. Due to the complexity of such a language framework,
it is a big challenge to  ensure its trustworthiness and to  establish
the correctness of the autogenerated language tools.  In this paper, we
propose an innovative approach based on  proof generation. The key idea
is to generate proof objects as correctness certificates for each
individual task that the language tools conduct, on a case-by-case basis,
and use a trustworthy proof checker to check the proof objects. This way,
we avoid formally verifying the entire framework, which is practically
impossible, and thus can make the language framework both practical and
trustworthy. As a first step, we formalize program execution as mathematical
proofs and generate their complete proof objects. The experimental result
shows that the performance of our proof object generation and proof
checking is very promising.},
  author_id         = {Xiaohong Chen and Zhengyao Lin and Minh-Thai Trinh and Grigore Rosu},
  booktitle_acronym = {CAV'21},
  booktitle_url     = {http://i-cav.org/2021/},
  category          = {fsl, executable_semantics, logics, matching_logic, program_verification, programming_languages},
  project_name      = {Matching Logic Proof Checker},
  project_url       = {https://github.com/kframework/matching-logic-proof-checker},
  numpages          = {22},
  address           = {Virtual},
}

@InProceedings{CR18,
  author    = {Chen, Xiaohong and Ro{\c{s}}u, Grigore},
  booktitle = {Proceedings of the 8\textsuperscript{th} International Symposium on Leveraging Applications of Formal Methods (ISoLA'18)},
  title     = {A language-independent program verification framework},
  year      = {2018},
  pages     = {92--102},
  publisher = {Springer},
  volume    = {11245},
  abstract  = {This invited paper describes an approach to language-independent deductive verification using the {\$}{\$}{\backslash}mathbb {\{}K{\}}{\$}{\$}semantics framework, in which an operational semantics of a language is defined and a program verifier together with other language tools are generated automatically, correct-by-construction.},
  isbn      = {978-3-030-03421-4},
}

@TechReport{CR19b,
  author      = {Chen, Xiaohong and Ro\c{s}u, Grigore},
  institution = {University of Illinois at Urbana-Champaign},
  title       = {Applicative matching logic},
  year        = {2019},
  number      = {http://hdl.handle.net/2142/104616},
}

@InProceedings{CR20,
  author      = {Chen, Xiaohong and Ro\c{s}u, Grigore},
  booktitle   = {Proceedings of the 25\textsuperscript{th} ACM SIGPLAN International Conference on Functional Programming (ICFP'20)},
  title       = {A general approach to define binders using matching logic},
  year        = {2020},
  address     = {New Jersey, USA},
  pages       = {1--32},
  publisher   = {ACM},
  institution = {University of Illinois at Urbana-Champaign},
  url         = {http://hdl.handle.net/2142/106608},
}

@TechReport{CR20a,
  author      = {Xiaohong Chen and Grigore Ro\c{s}u},
  institution = {University of Illinois at Urbana-Champaign},
  title       = {A general approach to define binders using matching logic},
  year        = {2020},
  url         = {http://hdl.handle.net/2142/106608},
}

@InProceedings{CTR20,
  author            = {Xiaohong Chen and Minh-Thai Trinh and Nishant Rodrigues and Lucas Pe{\~{n}}a and Grigore Ro\c{s}u},
  booktitle         = {PACMPL Issue OOPSLA 2020},
  title             = {Towards A Unified Proof Framework for Automated Fixpoint Reasoning Using Matching Logic},
  year              = {2020},
  month             = nov,
  pages             = {1--29},
  publisher         = {ACM/IEEE},
  abstract          = {Automation of fixpoint reasoning has been extensively studied for various mathematical structures, logical formalisms, and computational domains, resulting in specialized fixpoint provers for heaps, for streams, for term algebras, for temporal properties, for program correctness, and for many other formal systems and inductive and coinductive properties. However, in spite of great theoretical and practical interest, there is no unified framework for automated fixpoint reasoning. Although several attempts have been made, there is no evidence that such a unified framework is possible, or practical. In this paper, we propose a candidate based on matching logic, a formalism recently shown to theoretically unify the above mentioned formal systems. Unfortunately, the (Knaster-Tarski) proof rule of matching logic, which enables inductive reasoning, is not syntax-driven. Worse, it can be applied at any step during a proof, making automation seem hopeless. Inspired by recent advances in automation of inductive proofs in separation logic, we propose an alternative proof system for matching logic, which is amenable for automation. We then discuss our implementation of it, which although not superior to specialized state-of-the-art automated provers for specific domains, we believe brings some evidence and hope that a unified framework for automated reasoning is not out of reach.},
  author_id         = {Xiaohong Chen and Minh-Thai Trinh and Nishant Rodrigues and Lucas Pena and Grigore Rosu},
  booktitle_acronym = {OOPSLA'20},
  booktitle_url     = {https://2020.splashcon.org/track/splash-2020-oopsla},
  category          = {fsl,matching_logic},
  numpages          = {29},
  project_name      = {Matching Logic},
  project_url       = {https://github.com/runtimeverification},
}